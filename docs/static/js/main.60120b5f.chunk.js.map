{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GrifGridItem.js","components/GifGrid.js","Hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","element","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","res","json","data","dataFinal","console","log","gifs","map","img","id","title","urlImg","images","fixed_width","GrifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,sBAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAcP,GAAd,mBAA6BO,OAC3CN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAhBhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,aAoB3BZ,EAAYe,UAAY,CACtBd,cAAee,IAAUC,KAAKC,Y,mCC5BnBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,0DAC0CC,UAC7DH,GAFmB,sDAIHI,MAAMF,GAJH,cAIfG,EAJe,gBAKFA,EAAIC,OALF,cAKfC,EALe,OAOfC,EAAYD,EAAKA,KAEvBE,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GAENG,EAAOH,EAAUI,KAAI,SAACC,GAC1B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,OAAQH,EAAII,OAAOC,gBAIvBT,QAAQC,IAAIC,GApBS,kBAsBdA,GAtBc,4CAAH,sDCEPQ,EAAe,SAAC,GAAuB,IAArBH,EAAoB,EAApBA,OAAQD,EAAY,EAAZA,MAErC,OADAN,QAAQC,IAAIM,EAAOd,KAEjB,sBAAKkB,UAAU,0CAAf,UACE,qBAAKC,IAAKL,EAAOd,IAAKoB,IAAKP,IAC3B,4BAAIA,QCDGQ,EAAU,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SACxB,ECJ0B,SAACA,GAC3B,MAA0BlB,mBAAS,CACjCyB,KAAM,GACNiB,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACR5B,EAAQC,GAAU4B,MAAK,SAACC,GACtBC,YAAW,WACTrB,QAAQC,IAAImB,GACZH,EAAS,CACPnB,KAAMsB,EACNL,SAAS,MAEV,UAEJ,CAACxB,IAEGyB,EDdmBM,CAAa/B,GAA/BO,EAAR,EAAQA,KAAMiB,EAAd,EAAcA,QAGd,OAFAf,QAAQC,IAAIc,GAGV,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDpB,IAElDwB,GACC,mBAAGJ,UAAU,mCAAb,wBAGF,qBAAKA,UAAU,YAAf,SACGb,EAAKK,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAA+BA,GAAZA,EAAIC,aEQlBkB,EAxBM,WACnB,MAAoClD,mBAAS,CAAC,2BAA9C,mBAAOmD,EAAP,KAAmBpD,EAAnB,KAMA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACGoD,EAAWrB,KAAI,SAACZ,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCdxBkC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.60120b5f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"preventDefault\");\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategorias((element) => [inputValue, ...element]);\r\n      setinputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.prototype = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(\r\n    category\r\n  )}&api_key=hrigQZueYqTO4zwyK2GeE99j4YTiB2hX`;\r\n  const res = await fetch(url);\r\n  const data = await res.json();\r\n\r\n  const dataFinal = data.data;\r\n\r\n  console.log(data);\r\n  console.log(dataFinal);\r\n\r\n  const gifs = dataFinal.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      urlImg: img.images.fixed_width,\r\n    };\r\n  });\r\n\r\n  console.log(gifs);\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GrifGridItem = ({ urlImg, title }) => {\r\n  console.log(urlImg.url);\r\n  return (\r\n    <div className=\"card  animate__animated animate__fadeIn\">\r\n      <img src={urlImg.url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../Hooks/useFetchGifs\";\r\n// import React, { useState, useEffect } from \"react\";\r\n\r\nimport { GrifGridItem } from \"./GrifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data, loading } = useFetchGifs(category);\r\n  console.log(loading);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n      {loading && (\r\n        <p className=\"animate__animated animate__flash\">Loading...</p>\r\n      )}\r\n\r\n      <div className=\"card-grid\">\r\n        {data.map((img) => (\r\n          <GrifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setTimeout(() => {\r\n        console.log(imgs);\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n      }, 3000);\r\n    });\r\n  }, [category]);\r\n\r\n  return state; //{data : [] , loading : true};\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categorias, setCategorias] = useState([\"caballeros del zodiaco\"]);\r\n\r\n  // const handleAdd = (params) => {\r\n  //   setCategorias([...categorias, \"Power Rangers\"]);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategorias={setCategorias} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categorias.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nGifExpertApp.propTypes = {};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}